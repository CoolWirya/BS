using Automation;
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

namespace WebAutomation.Refer
{
    public partial class JReferViewControl : System.Web.UI.UserControl
    {
        private object objectCode;
        private object referCode;

        public int ObjectCode
        {
            get
            {
                objectCode = ViewState["objectCode"];
                return (objectCode == null) ? 0 : (int)objectCode;
            }

            set
            {
                ViewState["objectCode"] = value;
            }
        }


        public int ReferCode
        {
            get
            {
                referCode = ViewState["referCode"];
                return (objectCode == null) ? 0 : (int)objectCode;
            }

            set
            {
                ViewState["referCode"] = value;
            }
        }

        protected void Page_Load(object sender, EventArgs e)
        {
            //Telerik.Web.UI.RadAjaxManager manager = Telerik.Web.UI.RadAjaxManager.GetCurrent(Page);
            //manager.ClientEvents.OnRequestStart = "onRequestStart";
            //manager.ClientEvents.OnResponseEnd = "onResponseEnd";
            //manager.AjaxRequest += manager_AjaxRequest;
            if (!IsPostBack)
                if (ObjectCode == 0)
                {
                    try
                    {
                        WebClassLibrary.JSUIDManager formSUID = new WebClassLibrary.JSUIDManager("FormManagers");
                        ObjectCode = Convert.ToInt32(formSUID.GetObject("ObjectCode"));
                        LoadRefers();
                    }
                    catch
                    {
                    }
                }
        }

        //void manager_AjaxRequest(object sender, Telerik.Web.UI.AjaxRequestEventArgs e)
        //{
        //    if (Request.Form["EventType"] == "RefreshTree")
        //    {
        //        LoadData();
        //    }    
        //}

        public void LoadRefers(int objCode = 0)
        {
            if (objCode > 0)
            {
                ObjectCode = objCode;
                LoadData();
            }
        }

        private void LoadData()
        {
            radTreeList.DataSource = WebClassLibrary.JWebDataBase.GetDataTable(Automation.JARefers.GetReferByObjectCodeForWeb(ObjectCode), true);

            //radTreeList.DataBound += (sender2, args) =>
            //{
            //    radTreeList.AutoGeneratedColumns[0].Visible = false;
            //    radTreeList.AutoGeneratedColumns[1].Visible = false;
            //    radTreeList.AutoGeneratedColumns[2].HeaderText = ClassLibrary.JLanguages._Farsi(radTreeList.AutoGeneratedColumns[2].UniqueName);
            //    radTreeList.AutoGeneratedColumns[3].HeaderText = ClassLibrary.JLanguages._Farsi(radTreeList.AutoGeneratedColumns[3].UniqueName);
            //    radTreeList.AutoGeneratedColumns[4].HeaderText = ClassLibrary.JLanguages._Farsi(radTreeList.AutoGeneratedColumns[4].UniqueName);
            //    radTreeList.AutoGeneratedColumns[5].HeaderText = ClassLibrary.JLanguages._Farsi(radTreeList.AutoGeneratedColumns[5].UniqueName);
            //};
            radTreeList.Rebind();
        }

        protected void radTreeList_NeedDataSource(object sender, Telerik.Web.UI.TreeListNeedDataSourceEventArgs e)
        {
            radTreeList.DataSource = WebClassLibrary.JWebDataBase.GetDataTable(Automation.JARefers.GetReferByObjectCodeForWeb(ObjectCode), true);

        }


        protected void radTreeList_AutoGeneratedColumnCreated(object sender, Telerik.Web.UI.TreeListAutoGeneratedColumnCreatedEventArgs e)
        {
            if (e.Column.HeaderText.ToLower() == "code" || e.Column.HeaderText.ToLower() == "parent_code")
                e.Column.Visible = false;
            e.Column.HeaderText = ClassLibrary.JLanguages._Text(e.Column.UniqueName);
        }

        //public string ReferTree()
        //{


            //if (ReferCode == 0) return;
            ////Font font = new Font("B Traffic", 16, FontStyle.Regular, GraphicsUnit.Pixel);
            ////Font bfont = new Font("B Traffic", 16, FontStyle.Bold, GraphicsUnit.Pixel);

            //List<JARefers.ReferInfo> referInfo = (new JARefers()).GetSpecificReferList(int.Parse(referCode));
            //richTextBox1.Text = "";
            //richTextBox1.SelectedText = "□ " + referInfo[0].SenderName;
            //for (int i = 0; i < referInfo.Count; i++)
            //{
            //    richTextBox1.SelectionColor = Color.Blue;
            //    richTextBox1.SelectedText = " (تاریخ ارجاع: " + GetFullDate(referInfo[i].Date) + ")";
            //    richTextBox1.SelectionColor = Color.DarkGreen;
            //    richTextBox1.SelectedText = (referInfo[i].Description.Trim().Length > 0) ? "\r\n   : " + referInfo[i].Description + "\r\n" : "\r\n";

            //    if (referInfo[i].Code == referCode)
            //        richTextBox1.SelectionFont = bfont;
            //    else
            //        richTextBox1.SelectionFont = font;

            //    richTextBox1.SelectionColor = Color.Black;
            //    richTextBox1.SelectionIndent = referInfo[i].Level * 10;
            //    richTextBox1.SelectedText = /*Spaces(referInfo[i].Level) +*/ "□ " + referInfo[i].RecieverName;
            //    richTextBox1.SelectionColor = Color.DarkBlue;
            //    richTextBox1.SelectedText = (referInfo[i].isRead == true) ? " (تاریخ مشاهده: " + GetFullDate(referInfo[i].ReadDate) + ")" : "";
            //}
            //richTextBox1.SelectedText = "\r\n";

            //richTextBox1.SelectAll();
            //richTextBox1.SelectionFont = font;
            //richTextBox1.SelectionStart = 0;
            //richTextBox1.SelectionLength = 0;
        //}

    }
}